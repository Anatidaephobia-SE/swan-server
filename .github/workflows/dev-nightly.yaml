name: Nightly develop test

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '35 18 * * *'

env:
  COMPOSE_FILE: stage-docker-compose.yaml
  SWAN_IMAGE: swan-stage
  SWAN_IMAGE_WITH_URL: ${{ secrets.REGISTRY_URL }}/develop/swan-stage

jobs:
  nightly-test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        
    steps:
    - uses: actions/checkout@v1
      with:
        ref: develop
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: psycopg2 prerequisites
      run: sudo apt-get install -y libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
      env: 
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: github_actions
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_DEFAULT_USER }}
        RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_DEFAULT_PASS }}
        RABBITMQ_DEFAULT_VHOST: ${{ secrets.RABBITMQ_DEFAULT_VHOST }}
        RABBITMQ_ENDPOINT: localhost
        BASE_URL_FOR_MINIO: ${{ secrets.BASE_URL_FOR_MINIO }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
    - name: Run tests
      run: python manage.py test
      env: 
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: github_actions
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_ENDPOINT: localhost
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_DEFAULT_USER }}
        RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_DEFAULT_PASS }}
        RABBITMQ_DEFAULT_VHOST: ${{ secrets.RABBITMQ_DEFAULT_VHOST }}
        RABBITMQ_ENDPOINT: ${{ secrets.RABBITMQ_ENDPOINT }}
        BASE_URL_FOR_MINIO: ${{ secrets.BASE_URL_FOR_MINIO }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}

    - name: Measure coverage
      run: |
        bash analysis.sh
      env: 
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: github_actions
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_ENDPOINT: localhost
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_DEFAULT_USER }}
        RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_DEFAULT_PASS }}
        RABBITMQ_DEFAULT_VHOST: ${{ secrets.RABBITMQ_DEFAULT_VHOST }}
        RABBITMQ_ENDPOINT: ${{ secrets.RABBITMQ_ENDPOINT }}
        BASE_URL_FOR_MINIO: ${{ secrets.BASE_URL_FOR_MINIO }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}


    - name: Build Documentation
      run:  |
        bash build-doc.sh
    - name: add swan service env
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> swan.env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> swan.env
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> swan.env
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> swan.env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> swan.env
        echo "TWITTER_CONSUMER_KEY=${{ secrets.TWITTER_CONSUMER_KEY }}" >> swan.env
        echo "TWITTER_CONSUMER_SECRET=${{ secrets.TWITTER_CONSUMER_SECRET }}" >> swan.env
        echo "TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}" >> swan.env
        echo "TWITTER_ACCESS_TOKEN_SECRET=${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}" >> swan.env
        echo "MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}" >> swan.env
        echo "MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }}" >> swan.env
        echo "MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}" >> swan.env
        echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}" >> swan.env
        echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}" >> swan.env
        echo "RABBITMQ_DEFAULT_VHOST=${{ secrets.RABBITMQ_DEFAULT_VHOST }}" >> swan.env
        echo "RABBITMQ_ENDPOINT=${{ secrets.RABBITMQ_ENDPOINT }}" >> swan.env
        echo "BASE_URL_FOR_MINIO=${{ secrets.BASE_URL_FOR_MINIO }}" >> swan.env

    - name: add postgres service env
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> pg.env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> pg.env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> pg.env

    - name: add pgadmin service env
      run: |
        echo "PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}" >> pgadmin.env
        echo "PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> pgadmin.env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> pgadmin.env

    - name: add minio env
      run: |
        echo "MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}" >> minio.env
        echo "MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}" >> minio.env

    - name: add rabbitmq env
      run: |
        echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}" >> rabbitmq.env
        echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}" >> rabbitmq.env
        echo "RABBITMQ_DEFAULT_VHOST=${{ secrets.RABBITMQ_DEFAULT_VHOST }}" >> rabbitmq.env
        echo "RABBITMQ_ENDPOINT=${{ secrets.RABBITMQ_ENDPOINT }}" >> rabbitmq.env
    - name: Build image
      run: |
        docker-compose -f ${{ env.COMPOSE_FILE }} build