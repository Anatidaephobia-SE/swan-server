name: Python application

on:

  pull_request:
    branches:
      - develop
      - master

  push:
    branches:
      - master
      - develop
      - dockerize

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: psycopg2 prerequisites
      run: apt-get install -y libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
      env: 
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: github_actions
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_HOST: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
    - name: Run tests
      run: python manage.py test
      env: 
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: github_actions
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_HOST: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build

    steps:
      - name: "depoly"
        run: echo "haha"
